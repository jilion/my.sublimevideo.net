%nav#menu
  - if %w[my docs].include?(request.subdomain) && user_signed_in? && !demo_stats_page?
    %ul
      = activable_menu_restful_item(:li, :sites, { url_options: { subdomain: 'my' }, link_options: { onclick: "SublimeVideo.makeSticky(this, '#menu')" }, link_text: "My Sites" })
      = activable_menu_restful_item(:li, :root, { url_options: { subdomain: 'docs', protocol: 'http' }, link_options: { onclick: "SublimeVideo.makeSticky(this, '#menu')" }, link_text: "Documentation" })
      = activable_menu_restful_item(:li, :page, { url_options: { page: 'help', subdomain: 'my' }, link_options: { onclick: "SublimeVideo.makeSticky(this, '#menu')" }, link_text: "Help" })
      %li= link_to "Logout", destroy_user_session_url(subdomain: 'my')
      %li{ class: controller.request.url =~ /account/ ? 'active' : nil }
        = link_to(edit_user_url(subdomain: 'my'), class: "user", onclick: "SublimeVideo.makeSticky(this, '#menu')") do
          %span.icon= truncate(current_user.name_or_email, length: 35)
  - else
    %ul
      - [:news, :features, :plans, :demo, ['customer-showcase', { link_text: "Showcase" }], [:help, { link_text: "Help" }]].each do |r|
        - name = r.is_a?(Array) ? r[0] : r
        - opts = r.is_a?(Array) ? r[1] : { link_text: name.to_s.titleize }
        - subdomain = (name == :help && request.subdomain == 'my' ?  'my.' : '')
        = activable_menu_item(:li, page_url(name, { host: subdomain + request.domain, protocol: 'http' }), opts.merge(onclick: "SublimeVideo.makeSticky(this, '#menu')"))

      - if request.subdomain == 'my' || cookies[:l] == '1'
        %li= link_to "Login", login_url(subdomain: 'my')
        %li.signup= link_to "Sign Up", signup_url(subdomain: 'my')
      - else
        %li= link_to "Login", root_url(host: request.domain, p: 'login'), onclick: "return SublimeVideo.showPopup('login')"
        %li.signup= link_to "Sign Up", root_url(host: request.domain, p: 'signup'), onclick: "return SublimeVideo.showPopup('signup')"

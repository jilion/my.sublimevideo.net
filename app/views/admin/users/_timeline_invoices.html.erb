<%
require_dependency 'stat_timeline'

invoices = StatTimeline::Invoice.timeline(range_start_date, range_end_date, { user_id: user.id })

unless invoices.empty?
  graph = HighchartsGraphBuilder.new do |g|
    g.option(chart: chart('timeline_invoices', margin_top: 50))
    g.option(title: { text: "Past invoices" })
    g.option(subtitle: usage_date_subtitle(start_at: invoices.first.created_at, end_at: invoices.last.created_at, date_format: :month_fullyear))
    g.option(legend: legend(enabled: false))

    categories = [l(invoices.first.ended_at, format: :Y_m_d)]
    while (d ||= invoices.first.ended_at) < invoices.last.ended_at
      d = d.next_month.end_of_month
      categories << l(d, format: :Y_m_d)
    end
    g.option(xAxis: {
      type: 'linear', showLastLabel: true, tickWidth: 0, maxPadding: 0.05,
      categories: categories,
      labels: {
        y: 15
      }
    })
    g.raw_option(%(yAxis: {
      title: {
        text: 'US $',
        margin: 70,
        rotation: 0
      },
      showFirstLabel: false,
      min: 0,
      labels: {
        formatter: function() { return "$" + Highcharts.numberFormat(this.value / 100, 0); }
      },
      lineWidth: 1
    }))
    g.raw_option(%(tooltip: {
      borderWidth: 0,
      backgroundColor: "rgba(0, 0, 0, .70)",
      style: {
        color: '#FFFFFF',
        padding: '5px'
      },
      formatter: function() {
        return "<strong>" + this.x + "</strong><br/><br/>" + this.series.name + ": <strong>$" + Highcharts.numberFormat(this.y / 100, 2) + "</strong>";
      },
      borderWidth: 1
    }))
    g.option(series: [
      serie(invoices.map(&:amount), 'Invoice total amount', type: 'area'),
    ].flatten)
    g.option(plotOptions: plot_options(range_start_date.end_of_month, 1.month, marker: true, linear: true))
    g.option(credits: credits)
  end
end

if graph
%>
  <div id="timeline_invoices" style="width:40%; height:200px; float:right;"><%= raw graph.draw %></div>
<% end %>

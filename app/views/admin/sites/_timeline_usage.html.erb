<%
usages = Stat::SiteUsage.timeline(@date_range_from - (@moving_avg-1).days, @date_range_to, { site_ids: [site.id], labels: [:invalid_usage, :dev_usage, :main_usage, :extra_usage], merge_cached: true, dont_add_total_usages_before_start_time: true })
billable_usage = usages["main_usage"].zip(usages["extra_usage"]).map { |item| item.reduce(:+) }

graph = Graph.new do |g|
  g.option(chart: chart('timeline_usage'))
  g.option(title: { text: "Video pageviews for #{hostname_with_path_and_wildcard(site)}" })
  g.option(subtitle: usage_date_subtitle(start_at: @date_range_from, end_at: @date_range_to))
  g.option(legend: legend)
  g.option(xAxis: x_axis(start_at: @date_range_from, end_at: @date_range_to))
  g.raw_option(y_axis(""))
  g.raw_option(tooltip(formatter: %(
    var date  = "<strong>" + Highcharts.dateFormat("%B %e,  %Y", this.x) + "</strong><br/><br/>";
    var label = "<strong>" + Highcharts.numberFormat(this.y, 0) + "</strong>";
    var loader_per_player = '';

    if (["Invalid", "Invalid cached", "Dev", "Dev cached", "Extra", "Extra cached", "Main", "Main cached"].indexOf(this.series.name) != -1)
      label += " of " + Highcharts.numberFormat(this.total, 0) + " (" + Highcharts.numberFormat(this.percentage, 1) + "%)";
    else if (this.series.name == "Loader")
      label += "<br/>Loader / Player: " + Highcharts.numberFormat((this.y / (this.total - this.y)), 1);

    return date + this.series.name + ":<br/>" + label;
  )))

  plan_limits = site.plan.video_views > 0 ? [
    serie(Array.new(usages["main_usage"][@moving_avg-1..-1].size, site.plan.daily_video_views), "AVG #{site.plan.title}", type: 'line', stack: 0),
    serie(Array.new(usages["main_usage"][@moving_avg-1..-1].size, site.plan.video_views), "LIM #{site.plan.title}", type: 'line', visible: false, stack: 1)
  ] : []
  g.option(series: [
    serie(usages["invalid_usage"][@moving_avg-1..-1], 'Invalid', visible: false, stack: 2),
    serie(usages["dev_usage"][@moving_avg-1..-1], 'Dev', visible: false, stack: 2),
    serie(usages["extra_usage"][@moving_avg-1..-1], 'Extra', stack: 2),
    serie(usages["main_usage"][@moving_avg-1..-1], 'Main', stack: 2),
    serie(moving_average(billable_usage, @moving_avg), 'AVG Billable', type: 'line', stack: 3)
    ] + plan_limits)
  g.option(plotOptions: plot_options(@date_range_from))
  g.option(credits: credits)
end
%>

<div id="timeline_usage" style="width: 100%; height: 300px;"><%= raw graph.draw %></div>

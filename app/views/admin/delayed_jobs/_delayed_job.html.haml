%tr[delayed_job]{ class: cycle("", "alt ") + (recurring_job?(delayed_job) ? "recurring" : "") }
  %td.name.left
    = link_to job_name(delayed_job), admin_delayed_job_path(delayed_job)
  %td.priority
    %small= link_to delayed_job.priority, admin_delayed_job_path(delayed_job)
  %td.run_at
    %small= link_to l(delayed_job.run_at, format: :seconds_timezone_y), admin_delayed_job_path(delayed_job)
  %td.attempts
    %small= link_to delayed_job.attempts, admin_delayed_job_path(delayed_job)
  %td.last_error
    %small= link_to delayed_job.last_error.blank? ? "-" : truncate(delayed_job.last_error, length: 20), admin_delayed_job_path(delayed_job)
  %td.locked_at
    %small= link_to delayed_job.locked_at.blank? ? "-" : l(delayed_job.locked_at, format: :seconds_timezone_y), admin_delayed_job_path(delayed_job)
  %td.locked_by
    %small= link_to delayed_job.locked_by.blank? ? "-" : delayed_job.locked_by, admin_delayed_job_path(delayed_job)
  %td.failed_at
    %small= link_to delayed_job.failed_at.blank? ? "-" : l(delayed_job.failed_at, format: :seconds_timezone_y), admin_delayed_job_path(delayed_job)
  %td.unlock
    = delayed_job.locked_at.blank? ? "-" : button_to('Unlock', admin_delayed_job_path(delayed_job, sort_params), method: :put)
  %td.delete
    = button_to('Delete', admin_delayed_job_path(delayed_job, sort_params), data: { confirm: 'Are you sure?' }, method: :delete)
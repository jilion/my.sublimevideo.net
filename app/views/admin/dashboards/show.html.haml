= title_and_content_header("Dashboard")

= render '/admin/shared/date_chooser'

#timeline.dashboard_timeline
  %h3 Usage
  - cache "total_usage_timeline_#{range_start_date.to_i}_#{range_end_date.to_i}", :expires_in => (Time.now.utc.end_of_day - Time.now.utc) do
    = render 'timeline_usage'

%h2.revenue= "Total revenue: #{display_amount(Invoice.total_revenue)}"
%h3.revenue= "Date range revenue: #{display_amount(Invoice.between(range_start_date, range_end_date).total_revenue)}"

%h3 Sites
- active_sites    = Site.active.count
- free_sites      = Site.active.free.count
- sponsored_sites = Site.active.sponsored.count
- paying_sites    = Site.active.in_paid_plan.count
- custom_sites    = Site.active.custom.count
%table{ style: "width:300px;padding:0" }
  %tr
    %td LaunchPad
    %td= free_sites
    %td= display_percentage(free_sites.to_f / active_sites)
  %tr
    %td Sponsored
    %td= sponsored_sites
    %td= display_percentage(sponsored_sites.to_f / active_sites)
  %tr
    %td Paying
    %td= paying_sites
    %td= display_percentage(paying_sites.to_f / active_sites)
  %tr
    %td Custom
    %td= custom_sites
    %td= display_percentage(custom_sites.to_f / active_sites)
%br

%h3 Users

- cache "users_timeline_#{range_start_date.to_i}_#{range_end_date.to_i}", :expires_in => (Time.now.utc.end_of_day - Time.now.utc) do
  = render 'admin/users/timeline'

- total_users = User.active.count
- today_signups = User.active.where(:created_at.gte => Time.now.utc.midnight, :created_at.lt => Time.now.utc.tomorrow.midnight)
- yesterday_signups = User.active.where(:created_at.gte => Time.now.utc.yesterday.midnight, :created_at.lt => Time.now.utc.midnight)
- billable_customers = User.select("DISTINCT(users.id)").active_and_billable.count
%table{ style: "width:300px;" }
  %tr
    %td Users
    %td= total_users
    %td= "(#{today_signups.count} today, #{yesterday_signups.count} yesterday)"
  %tr
    %td Customers
    %td= billable_customers
    %td= display_percentage(billable_customers.to_f / total_users)
%br

- top_10_countries = User.select("country, COUNT(country) as country_count").where(id: User.select("DISTINCT(users.id)").active_and_billable.map(&:id)).group(:country).order("country_count DESC").map { |u| [u.country, u.country_count] }
%h3= "Top 10 countries (by billable customers #):"
%ul
  - (0...[top_10_countries.size, 10].min).each do |i|
    %li= "#{Country[top_10_countries[i][0]].name} (#{top_10_countries[i][1]} - #{display_percentage(top_10_countries[i][1].to_f / billable_customers)})"
%br

%h3 Traffic (SiteStat)
%p
  Last 30 days traffic:&nbsp;&nbsp;&nbsp;
  = "#{number_with_delimiter(@last_30_days_video_views, :significant => false, :precision => 2, :delimiter => "'")} video views"
%p
  Last 30 days avg/day:
  = "#{number_with_delimiter(@last_30_days_video_views / 30, :significant => false, :precision => 2, :delimiter => "'")} video views"
%p
  All time traffic:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  = "#{number_with_delimiter(@total_video_views, :significant => false, :precision => 2, :delimiter => "'")} video views"
%br

%h3 Traffic (SiteUsage)
%p
  Last 30 days traffic:&nbsp;&nbsp;&nbsp;
  = "#{number_with_delimiter(@last_30_days_video_pageviews, :significant => false, :precision => 2, :delimiter => "'")} video pageviews"
%p
  Last 30 days avg/day:
  = "#{number_with_delimiter(@last_30_days_video_pageviews / 30, :significant => false, :precision => 2, :delimiter => "'")} video pageviews"
%p
  All time traffic:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  = "#{number_with_delimiter(@total_video_pageviews, :significant => false, :precision => 2, :delimiter => "'")} video pageviews"
%br

.spacer
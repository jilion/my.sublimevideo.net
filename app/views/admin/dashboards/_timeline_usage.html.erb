<%
usages = Stat::SiteUsage.timeline(@date_range_from, @date_range_to)

graph = Graph.new do |g|
  g.option(chart: chart('timeline_usage'))
  g.option(title: { text: "VPV per day, total and averages" })
  g.option(subtitle: usage_date_subtitle(@date_range_from, @date_range_to))
  g.option(legend: legend(width: 700))
  g.option(xAxis: x_axis(@date_range_from, @date_range_to))
  
  g.raw_option(y_axis("Video-page views"))
  g.raw_option(tooltip(formatter: %(
    var date  = "<strong>" + Highcharts.dateFormat("%B %e,  %Y", this.x) + "</strong><br/><br/>";
    var label = "<strong>" + Highcharts.numberFormat(this.y, 0) + "</strong>";
    var loader_per_player = '';

    if (["Invalid", "Invalid cached", "Dev", "Dev cached", "Extra", "Extra cached", "Main", "Main cached"].indexOf(this.series.name) != -1)
      label += " of " + Highcharts.numberFormat(this.total, 0) + " (" + Highcharts.numberFormat(this.percentage, 1) + "%)";
    else if (this.series.name == "Loader")
      label += "<br/>Loader / Player: " + Highcharts.numberFormat((this.y / (this.total - this.y)), 1);

    return date + this.series.name + " hits:<br/>" + label;
  )))
  
  g.option(series: [
    serie(usages["loader_usage"], 'Loader', '#AA0', :visible => false),
    serie(usages["invalid_usage_cached"], 'Invalid cached', '#F80'),
    serie(usages["invalid_usage"], 'Invalid', '#F00'),
    serie(usages["dev_usage_cached"], 'Dev cached', '#1C1'),
    serie(usages["dev_usage"], 'Dev', '#3F3'),
    serie(usages["main_usage_cached"], 'Main cached', '#08F'),
    serie(usages["main_usage"], 'Main', '#00F'),

    serie(evolutive_average_array(usages["total_loader_usage"]), 'AVG Loader', '#FF0', :type => 'line', :visible => false),
    serie(evolutive_average_array(usages["total_invalid_usage"]), 'AVG Invalid', '#FC3', :type => 'line', :visible => false),
    serie(evolutive_average_array(usages["total_dev_usage"]), 'AVG Dev', '#6F6', :type => 'line', :visible => false),
    serie(evolutive_average_array(usages["total_main_usage"].zip(usages["main_usage_cached"]).map { |item| item.reduce(:+) }), 'AVG Main', '#0FF', :type => 'line'),

    serie(usages["total_main_usage"], 'TOT Main', '', :type => 'line', :visible => false),
    serie(usages["total_all_usage"], 'TOT All', '', :type => 'line', :visible => false)
  ])
  g.option(plotOptions: plot_options(@date_range_from))
  g.option(credits: credits)
end
%>
<div id="timeline_usage" style="width: 100%; height: 400px;"><%= raw graph.draw(:observe => request.xhr? ? false : "dom:loaded") %></div>

:ruby
  minimum_users = 100
  countries = User.beta.select("country, COUNT(*) as total").group(:country).order("total DESC").map! { |u| [u.country || "Unknown", u.total.to_i] }
  other_countries = ["Other (less than #{minimum_users} users)", 0]
  countries_with_others = countries.inject([]) do |memo, country|
    if country[1] < minimum_users
      other_countries[1] += country[1]
    else
      memo << [Country[country[0]].name, country[1]]
    end
    memo
  end << other_countries
  
:erb
  <script type = "text/javascript" charset="utf-8">
  document.observe("dom:loaded", function() {
    new Highcharts.Chart({
      chart: {
        renderTo: 'countries',
        backgroundColor: '#EEEEEE',
        animation: false
      },
      title: {
        text: 'Repartition of users by country'
      },
      tooltip: {
        borderWidth: 0,
        backgroundColor: "rgba(0, 0, 0, .70)",
        style: {
        	color: '#FFFFFF',
        	padding: '5px'
        },
        formatter: function() {
          return "<strong>" + this.point.name + "</strong>: " + Highcharts.numberFormat(this.y, 0) + " users";
        }
      },
      plotOptions: {
        pie: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: {
            enabled: true,
            distance: 30,
            color: 'black',
            formatter: function() {
              return "<strong>" + this.point.name + "</strong>: " + Highcharts.numberFormat(this.percentage, 1) + " %";
            }
          }
        }
      },
      series: [{
        type: 'pie',
        data: <%= raw countries_with_others.to_json %>
      }],
      credits: {
        enabled: true,
        text: "Generation time: <%= Time.now.to_s(:format => :fully_full) %> / Copyright © <%= Date.today.year %> - SublimeVideo®",
        href: "http://sublimevideo.net"
      }
    });
  });
  </script>

#countries{ :style => "width:100%; height:350px;" }

#countries_table
  %table
    %tr
      %th Rank
      %th Country
      %th # of users
    - countries.each_with_index do |country, i|
      %tr
        %td= i + 1
        %td= Country[country.first].name
        %td= country.second

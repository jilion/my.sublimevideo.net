<%
last_billed_on   = site.created_at.change(:month => Date.today.month).beginning_of_day
interval         = 1.day
title            = "VPV per day, total and averages for #{site.hostname} between #{l(@date_range_from, :format => :small)} and #{l(@date_range_to, :format => :small)}"

usages = Stat.usages(@date_range_from, @date_range_to, { :site_id => site.try(:id) })
usages = (@date_range_from.to_date..@date_range_to.to_date).inject([]) do |memo, day|
  usage_on_day = usages.detect { |u| u["day"].to_date == day }
  memo << (usage_on_day ? usage_on_day : { "day" => day })
end

loader_usages  = usages.map { |u| u["loader_usage"].to_i }
invalid_usages = usages.map { |u| u["invalid_usage"].to_i }
dev_usages     = usages.map { |u| u["dev_usage"].to_i }
main_usages    = usages.map { |u| u["main_usage"].to_i }
all_usages     = usages.map { |u| u["all_usage"].to_i }

total_loader_usages  = loader_usages.inject([]) { |memo, u| memo << ((memo.last || 0) + u) }
total_invalid_usages = invalid_usages.inject([]) { |memo, u| memo << ((memo.last || 0) + u) }
total_dev_usages     = dev_usages.inject([]) { |memo, u| memo << ((memo.last || 0) + u) }
total_main_usages    = main_usages.inject([]) { |memo, u| memo << ((memo.last || 0) + u) }
total_all_usages     = all_usages.inject([]) { |memo, u| memo << ((memo.last || 0) + u) }

perso_monthly_limit = 3000 # we fake ~ site.plan.limit
pro_monthly_limit   = 30000 # we fake ~ site.plan.limit
huge_monthly_limit  = 300000 # we fake ~ site.plan.limit

perso_daily_limit = perso_monthly_limit / 30 # we fake ~ site.plan.limit
pro_daily_limit   = pro_monthly_limit / 30 # we fake ~ site.plan.limit
huge_daily_limit  = huge_monthly_limit / 30 # we fake ~ site.plan.limit
%>

<script type = "text/javascript" charset="utf-8">
  document.observe("dom:loaded", function() {
    var chart = new Highcharts.Chart({
      chart: {
        renderTo: 'usage_per_day',
        marginTop: 80,
        backgroundColor: '#EEE'
      },
      title: {
        text: '<%= title %>'
      },
      xAxis: {
        type: 'datetime',
        showFirstLabel: true,
        showLastLabel: true
      },
      yAxis: {
        title: {
          text: 'Video-page views',
          margin: 60
        },
        labels: {
          formatter: function() {
            return Highcharts.numberFormat(this.value, 0, '.', "'");
          }
        }
      },
      legend: {
        verticalAlign: 'top',
        y: 30,
        width: 950,
        symbolWidth: 12,
        backgroundColor: '#FFFFFF',
        borderColor: '#CCC'
      },
      tooltip: {
        formatter: function() {
          var date = "<strong>" + Highcharts.dateFormat("%B %e,  %Y", this.x) + "</strong><br/>";

          if(this.series.name == "Billing days") return date;

          var percentage_of_total = '';
          var percentage_of_limit = '';

          if (["Invalid", "Invalid cached", "Dev", "Dev cached", "Main", "Main cached"].indexOf(this.series.name) != -1) {
            percentage_of_total = " (" + Highcharts.numberFormat(this.percentage, 1) + "%)";
          }
          else if (this.series.name == "Loader") {
            percentage_of_limit = "Loader / Player: " + Highcharts.numberFormat((this.y / (this.total - this.y)), 1);
          }
          else if (this.series.name == "TOT Main") {
            percentage_of_limit = Highcharts.numberFormat((this.y / <%= pro_monthly_limit %>)*100, 0) + "% of pro plan limit";
          }
          if(percentage_of_limit) percentage_of_limit = "<br/>" + percentage_of_limit

          return date + this.series.name + ": " + Highcharts.numberFormat(this.y, 0) + percentage_of_total + percentage_of_limit;
        }
      },
      series: [
      {
        type: 'column',
        name: 'Loader',
        visible: false,
        color: '#AA0',
        data: <%= loader_usages %>
      },
      {
        type: 'column',
        name: 'Invalid cached',
        color: '#F80',
        data: <%= usages.map { |u| u["invalid_usage_cached"].to_i } %>
      },
      {
        type: 'column',
        name: 'Invalid',
        color: '#F00',
        data: <%= invalid_usages %>
      },
      {
        type: 'column',
        name: 'Dev cached',
        color: '#1C1',
        data: <%= usages.map { |u| u["dev_usage_cached"].to_i } %>
      },
      {
        type: 'column',
        name: 'Dev',
        color: '#3F3',
        data: <%= dev_usages %>
      },
      {
        type: 'column',
        name: 'Main cached',
        color: '#08F',
        data: <%= usages.map { |u| u["main_usage_cached"].to_i } %>
      },
      {
        type: 'column',
        name: 'Main',
        color: '#00F',
        data: <%= main_usages %>
      },

      {
        type: 'line',
        name: 'AVG Loader',
        visible: false,
        color: '#FF0',
        data: <%= Array.new.tap { |arr| total_loader_usages.each_with_index { |item, index| arr << (item / (index + 1)).to_i } } %>
      },
      {
        type: 'line',
        name: 'AVG Invalid',
        visible: false,
        color: '#FC3',
        data: <%= Array.new.tap { |arr| total_invalid_usages.each_with_index { |item, index| arr << (item / (index + 1)).to_i } } %>
      },
      {
        type: 'line',
        name: 'AVG Dev',
        visible: false,
        color: '#6F6',
        data: <%= Array.new.tap { |arr| total_dev_usages.each_with_index { |item, index| arr << (item / (index + 1)).to_i } } %>
      },
      {
        type: 'line',
        name: 'AVG Main',
        color: '#0FF',
        data: <%= Array.new.tap { |arr| total_main_usages.each_with_index { |item, index| arr << (item / (index + 1)).to_i } } %>
      },

      {
        type: 'line',
        name: 'TOT Main',
        visible: false,
        data: <%= total_main_usages %>
      },
      {
        type: 'line',
        name: 'TOT All',
        visible: false,
        data: <%= total_all_usages %>
      },

      {
        type: 'line',
        name: 'AVG Perso',
        visible: false,
        data: <%= Array.new(main_usages.size, perso_daily_limit) %>
      },
      {
        type: 'line',
        name: 'AVG Pro',
        data: <%= Array.new(main_usages.size, pro_daily_limit) %>
      },
      {
        type: 'line',
        name: 'AVG Enterprise',
        visible: false,
        data: <%= Array.new(main_usages.size, huge_daily_limit) %>
      },
      {
        type: 'line',
        name: 'LIMIT Perso',
        visible: false,
        data: <%= Array.new(main_usages.size, perso_monthly_limit) %>
      },
      {
        type: 'line',
        name: 'LIMIT Pro',
        visible: false,
        data: <%= Array.new(main_usages.size, pro_monthly_limit) %>
      },
      {
        type: 'line',
        name: 'LIMIT Enterprise',
        visible: false,
        data: <%= Array.new(main_usages.size, huge_monthly_limit) %>
      },
      {
        type: 'scatter',
        name: 'Billing days',
        data: <%
            d = last_billed_on
            datas = []
            while(d >= site.created_at.beginning_of_day && d >= @date_range_from) do
              datas << [d.to_i * 1000, all_usages.max]
              d = 1.month.until(d).beginning_of_day
            end
          %>
          <%= datas.inspect %>
      }],
      plotOptions: {
        column: {
          pointInterval: <%= interval * 1000 %>,
          pointStart: <%= @date_range_from.to_i * 1000 %>,
          stacking: 'normal',
          shadow: false
        },
        line: {
          pointInterval: <%= interval * 1000 %>,
          pointStart: <%= @date_range_from.to_i * 1000 %>,
          lineWidth: 2,
          marker: {
            enabled: false
          },
          shadow: false,
          states: {
            hover: {
              lineWidth: 2,
              marker: {
                enabled: true
              }
            }
          }
        },
        scatter: {
          marker: {
            symbol: 'circle',
            radius: 6
          }
        }
      },
      credits: {
        enabled: true,
        text: "Generation time: <%= Time.now.to_s(:format => :fully_full) %> / Copyright © <%= Date.today.year %> - SublimeVideo®",
        href: "http://sublimevideo.net"
      }
    });
  });
</script>
<div id="usage_per_day" width="100%" height="250px"></div>
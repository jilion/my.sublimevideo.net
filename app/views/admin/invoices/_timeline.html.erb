<%
invoices = ::Invoice.between(@date_range_from - (@moving_avg-1).days, @date_range_to).order(:created_at.asc)

paid_invoices         = Stat::Invoice.timeline(invoices.paid, @date_range_from - (@moving_avg-1).days, @date_range_to)
monthly_paid_invoices = Stat::Invoice.timeline(invoices.includes(:plan_invoice_items).paid.select { |i| i.paid_plan.monthly? }, @date_range_from - (@moving_avg-1).days, @date_range_to)
yearly_paid_invoices  = Stat::Invoice.timeline(invoices.includes(:plan_invoice_items).paid.select { |i| i.paid_plan.yearly? }, @date_range_from - (@moving_avg-1).days, @date_range_to)
open_invoices         = Stat::Invoice.timeline(invoices.open, @date_range_from - (@moving_avg-1).days, @date_range_to)
failed_invoices       = Stat::Invoice.timeline(invoices.failed, @date_range_from - (@moving_avg-1).days, @date_range_to)
canceled_invoices     = Stat::Invoice.timeline(invoices.canceled, @date_range_from - (@moving_avg-1).days, @date_range_to)
refunded_invoices     = Stat::Invoice.timeline(invoices.refunded, @date_range_from - (@moving_avg-1).days, @date_range_to)
waiting_invoices      = Stat::Invoice.timeline(invoices.waiting, @date_range_from - (@moving_avg-1).days, @date_range_to)

graph = Graph.new do |g|
  g.option(chart: chart('timeline_invoices', margin_top: 100))
  g.option(title: { text: "Invoices" })
  g.option(subtitle: usage_date_subtitle(start_at: @date_range_from, end_at: @date_range_to, date_format: :month_fullyear))
  g.option(legend: legend(y: 40, width: 730))
  g.option(xAxis: x_axis(start_at: @date_range_from, end_at: @date_range_to))

  g.raw_option(%(yAxis: {
    title: {
      text: 'US $',
      margin: 70,
      rotation: 0
    },
    showFirstLabel: false,
    min: 0,
    labels: {
      formatter: function() { return "$" + Highcharts.numberFormat(this.value / 100, 0); }
    },
    lineWidth: 1
  }))
  g.raw_option(%(tooltip: {
    borderWidth: 0,
    backgroundColor: "rgba(0, 0, 0, .70)",
    style: {
      color: '#FFFFFF',
      padding: '5px'
    },
    formatter: function() {
      return "<strong>" + Highcharts.dateFormat("%B %e,  %Y", this.x) + "</strong><br/>" + this.series.name + ": <strong>$" + Highcharts.numberFormat(this.y / 100, 2) + " of $" + Highcharts.numberFormat(this.total / 100, 2) + " (" + Highcharts.numberFormat(this.percentage, 1) + "%)</strong>";
    }
  }))
  
  g.option(series: [
    serie(paid_invoices[@moving_avg-1..-1], 'Paid', '#0000FF', type: 'line', color: '#600fff', visible: false, stack: 0),
    serie(moving_average(paid_invoices, @moving_avg), 'AVG Paid', '#00FFFF', type: 'line', stack: 1),
    serie(yearly_paid_invoices[@moving_avg-1..-1], 'Paid (yearly)', '#0000FF', type: 'column', color: '#5e33c8', stack: 2),
    serie(monthly_paid_invoices[@moving_avg-1..-1], 'Paid (monthly)', '#0000FF', type: 'column', color: '#7941ff', stack: 2),
    serie(failed_invoices[@moving_avg-1..-1], 'Failed', '#89A54E', type: 'column', color: '#fe2617', stack: 2),
    serie(open_invoices[@moving_avg-1..-1], 'Open', '#A1A', type: 'column', color: '#EEE', stack: 2),
    serie(waiting_invoices[@moving_avg-1..-1], 'Waiting', '#00FF00', type: 'column', color: '#AAA', stack: 2),
    serie(canceled_invoices[@moving_avg-1..-1], 'Canceled', '#89A54E', type: 'column', color: '#b00000', stack: 3),
    serie(refunded_invoices[@moving_avg-1..-1], 'Refunded', '#1C1', type: 'column', color: '#ff8000', stack: 3)
  ])
  # g.option(plotOptions: plot_options(@date_range_from.end_of_month, 1.month, marker: true, linear: true))
  g.option(plotOptions: plot_options(@date_range_from))
  g.option(credits: credits)
end
%>
<div id="timeline_invoices" style="width: 100%; height: 400px;"><%= raw graph.draw %></div>

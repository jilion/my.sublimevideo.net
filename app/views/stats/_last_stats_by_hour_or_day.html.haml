- cache [site, video_tag, stats_presenter.options] do

  #dates_range_and_source
    %h3.title
      %span
        Last
        %em= stats_hours_or_days(stats_presenter.options[:hours])
      .fake_select_wrap
        = link_to '', class: 'fake_select' do
          %span Show date ranges
        %ul.actions{ style: 'display:none', data: { name: 'hours' } }
          - stats_hours_range_select(stats_presenter.options[:hours]).each do |hours, date_range_text|
            %li{ class: cycle('', 'alt') }= link_to date_range_text, url_for(hours: hours), data: { value: hours }
      %span{ style: 'padding-left:10px;' }
        for
        %em= stats_sources_hash[stats_presenter.options[:source]]
      .fake_select_wrap
        = link_to '', class: 'fake_select' do
          %span Show sources
        %ul.actions{ style: 'display:none', data: { name: 'source' } }
          - stats_source_select(stats_presenter.options[:source]).each do |source, source_text|
            %li{ class: cycle('', 'alt') }= link_to source_text, url_for(source: source), data: { value: source }
      .spacer

  %ul#plays_and_loads_graph_legend
    %li.video_plays<
      = display_integer(stats_presenter.plays.sum { |a| a[1] })
      %span.title plays
    %li.page_visits<
      = display_integer(stats_presenter.loads.sum { |a| a[1] })
      %span.title loads
  .spacer

  #plays_and_loads{ data: { plays: stats_presenter.plays, loads: stats_presenter.loads, hours: stats_presenter.options[:hours] } }
    #plays_and_loads_graph
  .spacer

  #browsers_and_platforms.graph_box
    = render 'stats/browsers_and_platforms', stats: stats_presenter.browsers_and_platforms_stats

  #countries.graph_box
    = render 'stats/countries', stats: stats_presenter.countries_stats

  #mobile_desktop.graph_box
    = render 'stats/mobile_desktop', stats: stats_presenter.devices_stats

  .spacer
  .big_break
  #export_wrap
    #export
      = link_to url_for(format: 'csv'), id: 'csv_export' do
        %span.icon Export Data
    %p.desc
      Export "loads" and "plays" data for the last
      = stats_hours_or_days(stats_presenter.options[:hours])
      in CSV format. The exported file includes "loads" and "plays" data that happened
      = succeed '.' do
        = stats_sources_for_export_text(stats_presenter.options[:source])

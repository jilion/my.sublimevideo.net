-# TODO, remove site.valid? check, once all beta site has been updated and are valid.
%tr{ :id => dom_id(site), :class => cycle("", "alt") + "#{" invalid" unless site.valid?}" }
  %td.site
    .wrap
      = link_to "http://#{hostname_with_path(site)}", :class => "external_link", :onclick => site.valid? ? "window.open(this); return false" : "return MySublimeVideo.showSiteSettings(#{site.id})", :title => site.valid? ? hostname_with_path(site) : "Your domain is invalid please update it." do
        = hostname_with_path_and_wildcard(site, :truncate => 30)
        - unless site.valid?
          %span.invalid><
            -# TODO: Update this text
            %em= "Invalid"
        
      - if site.wildcard?
        %span
          %em= "wildcard support"
      - if site.need_path?
        %span
          -# TODO: Update this text
          %em= "you should add a path"
      
      - if site.pending?
        = link_to "", :class => "settings disabled", :title => "Settings", :onclick => "return false" do
          %span= "settings"
        = link_to "", :class => "addons disabled", :title => "Addons", :onclick => "return false" do
          %span= "addons"
      - else
        = link_to "", :class => "settings", :title => "Settings", :onclick => "return MySublimeVideo.showSiteSettings(#{site.id})" do
          %span= "settings"
        = link_to "", :class => "addons disabled", :title => "Addons", :onclick => "return MySublimeVideo.showSiteAddons(#{site.id})"  do
          %span= "addons"
      -#%em.date= l site.created_at.to_date, :format => :small
  %td.code
    - if site.pending?
      .in_progress
        %em= "Uploading to cloud"
    - else
      = link_to "Embed code", "", :class => "embed_code", :onclick => "return MySublimeVideo.showSiteEmbedCode(#{site.id})"
      
  %td.hits
  %td.delete
    = button_to 'Delete', site, :onclick => "return MySublimeVideo.confirmDeleteSite(this)", :method => :delete, :remote => true

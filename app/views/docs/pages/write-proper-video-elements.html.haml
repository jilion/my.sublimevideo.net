= content_for :title, "Write proper video elements"
= content_tag :h2, "Write proper <video> elements"

:textile
  The @<video>@ tag is the core element used to embed video clips in HTML5.
  *SublimeVideo relies exclusively on this element to define the video you want to embed*. No need to worry about browsers that do not support HTML5 (like Internet Explorer 6, 7 and 8), no need to add extra markup code for the Flash fallback. You just need to write a simple @<video>@ element for each video you want to embed and SublimeVideo will take care of the rest.

  Here is how your @<video>@ element should look:
:coderay
  #{coderay_options(:html, line_numbers: :inline, line_number_anchors: 'L', bold_every: false)}
  <video class="sublime" width="640" height="360" poster="video-poster.jpg" preload="none">
    <source src="http://yoursite.com/video.mp4" />
    <source src="http://yoursite.com/video-mobile.mp4" />
    <source src="http://yoursite.com/video.webm" />
    <source src="http://yoursite.com/video.ogv" />
  </video>
:textile

  Let's go through the above code line by line.

  h4. The &lt;video&gt; attributes

  *Line 1.*
  
  * SublimeVideo only operates on @<video>@ elements that have the "_sublime_" @class@ (unless you use our "JavaScript API":/javascript-api), so adding this @class@ is mandatory.
  * %(red)It is very important to provide the proper @width@ and @height@ attributes in order to be sure the *proportions* of the original video are maintained%. These values don't necessarily have to match the width and height of the original video: you can use smaller values to scale down the video, but be sure the proportions are maintained.
  _Example_: if the resolution of the original video is 1280x720, you could use @width="640" height="360"@ or @width="800" height="450"@ to have the video properly scaled down with its original proportions maintained.
  * We recommend you always specify a poster frame. It's the image displayed behind the initial play button. It represents the video until the user starts playing it.
  * The @preload="none"@ attribute allows you to save bandwidth by avoiding to start preloading (buffering) the video when the page is loaded. It is supported by most modern browsers (Safari 5, Chrome 6, Firefox 4 and Opera 10.6) . We recommend you always specify this attribute otherwise your videos might start preloading in the background even if the user never clicked the initial play button.

  h4. The &lt;source&gt;s

  A @<video>@ element can link to multiple video files through @<source>@ elements. These are different versions (in different formats) of the same video. The browser will choose the first source it can actually play.

  *Line 2.* You must provide at least one @<source>@ element linking to the MP4/H.264 video file. This will enable SublimeVideo HTML5 mode in browsers like Chrome and Safari. But if you only specify this source you won't get HTML5 mode in Firefox and Opera (although the video will still be visible on those browsers through SublimeVideo's Flash mode). %(red)Please do not forget the *closing slash* @/>@ at the end of every @<source>@ element%, this is necessary to ensure compatibility with IE 6, 7, 8.

  *Line 3.* In case the MP4 source specified above (line 5.) exceeds the maximum resolution/bitrate supported by the iPhone and other mobile platforms, you need to provide a specific version of the video encoded for these mobile devices. Learn more about "how to encode for mobile devices":http://diveintohtml5.info/video.html#handbrake-gui.

  *Lines 4./5.* Providing the Ogg source (in addition to MP4) enables SublimeVideo HTML5 mode in all HTML5-capable browsers, meaning Flash mode will only be used on browsers that do not support HTML5 (like IE 6, 7, 8). If you're already providing an Ogg source, the WebM source is not needed (right now encoding WebM can be really slow and many people still choose to use Ogg over WebM, but this will probably change in the future). As said earlier, you are not obliged to provide a Ogg or a WebM source: *you could completely omit line 4 and 5* and the video would still be watchable on all browsers; BUT in this case SublimeVideo will switch to Flash mode on Firefox and Opera.

  h4. Additional information

  Please consult our "supported browsers":/supported-browsers-and-platforms page which includes information about the supported video formats for each browser.
  For more information about the HTML5 @<video>@ element, please read the "W3C specification":http://www.w3.org/TR/html5/video.html.

- visible_addon_plans = addon.plans.order(:price).select { |addon_plan| addon_plan.available?(site) }
- unless visible_addon_plans.empty?
  %tr
    %th{ colspan: 3 }= t("addons.#{addon.name}")
  - visible_addon_plans.each do |addon_plan|
    - addon_plan_is_sponsored = site.addon_plan_is_sponsored?(addon_plan)
    - price = addon_plan_is_sponsored || addon_plan.beta? ? 0 : addon_plan.price
    - disabled = addon_plan.free? || addon_plan_is_sponsored
    %tr{ class: highlighted_class(addon_plan) }
      %td
        - if visible_addon_plans.size > 1
          .radio_wrap
            = radio_button_tag "addon_plans[#{addon.name}]", addon_plan.id, site.addon_plans.include?(addon_plan), data: { price: price }
            = label_tag "addon_plans[#{addon.name}]" do
              = t("addon_plans.#{addon.name}.#{addon_plan.name}")
              = beta_loader_required_notice(addon_plan)
        - else
          .checkbox_wrap{ class: disabled ? 'disabled' : nil }
            - if free_addon_plan_id = addon.free_plan.try(:id)
              = hidden_field_tag "addon_plans[#{addon.name}]", free_addon_plan_id, id: "addon_plans_#{addon.name}_#{free_addon_plan_id}"
            = check_box_tag "addon_plans[#{addon.name}]", addon_plan.id, site.addon_plans.include?(addon_plan), disabled: disabled, id: "addon_plans_#{addon.name}_#{addon_plan.id}", data: { price: price }
            = label_tag "addon_plans[#{addon.name}]" do
              = t("addon_plans.#{addon.name}.#{addon_plan.name}")
              = beta_loader_required_notice(addon_plan)
      %td.trial_notice
        - unless addon_plan_is_sponsored
          .trial_days_remaining{ style: "display:#{site.addon_plans.include?(addon_plan) ? 'block' : 'none'}" }= trial_days_remaining(site, addon_plan)
      %td.price
        - if addon_plan_is_sponsored
          = 'sponsored'
          - if site.plan_id? && site.plan.title != 'sponsored'
            %small= raw "(#{link_to('why?', '#', class: 'grandfather_plan_link hl')})"
        - else
          = billable_item_price(addon_plan)
